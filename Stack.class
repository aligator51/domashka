public class Stack {
	
	private char stack[];
	private int tos;
	
	
	
	Stack(int size){
		stack = new char[size];
		tos = 0;
	}
	
	Stack(char a[]){
		stack = new char[a.length];
		
		for(int i = 0; i < a.length; i++) {
			push(a[i]);
		}
	}
	
	Stack(Stack ob){
		tos = ob.tos;
		stack = new char[ob.stack.length];
		for(int i = 0; i < tos; i++) {
			stack[i] = ob.stack[i];
		}
		
	}
	
	
	void push(char ch) {
		if(tos == stack.length) {
			System.out.println("Stack is full!");
			return;
		}
		stack[tos] = ch;
		tos++;
	}
	char pop() {
		if(tos == 0) {
			System.out.println("Stack is empty!");
			return (char) 0;
		}
		tos--;
		return stack[tos];//TOS не удаляет из очереди, он просто забывает о символе.
		
	}
	String read(int tos) {
		
		String out = "Pos " + tos + ": " + stack[tos];
		return out;
	}
	
	String readAll() {
		String out = "";
		for(int i = stack.length-1; i >= 0 ; i--) {
			out = out + stack[i];
		}
		return out;
	}
	
	int getLenght() {
		return stack.length;
	}
	int getEmptySlots() {
		return stack.length - tos;
		
	}
	


	public static void main(String[] args) {
		Stack st = new Stack(10);
		
		Stack st2 = new Stack(10);
	
		char ch;
		for(int i=0; i < 10; i++) {
            st.push((char) ('A' + i));
            System.out.print((char) ('A' + i));
		}
		System.out.println();
		System.out.println(st.readAll());
		
		char name[] = {'A','B','C','D'};
		Stack st1 = new Stack(name);
		
		for(int i = 0; i < st1.getLenght(); i++) {
			System.out.println(st1.read(i));
		}
		
		System.out.println(st1.readAll());
		
		Stack st3 = new Stack(st);
		System.out.println(st3.readAll());
		
		


	}

}
